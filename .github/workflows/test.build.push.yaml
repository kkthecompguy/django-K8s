name: Test Build Docker CICD

on: 
  workflow_call:
  workflow_dispatch:
  push:
    branches: 
      - "master"
  pull_request:
    branches:
      - "master"

jobs:
  test_django:
    runs-on: ubuntu-latest
    environment:
      name: testing
    env:
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      POSTGRES_PASSWORD: x1XlM-juH5LWJseJS113iQtfXL9Zf8TBBo3fXRuRh6E
      POSTGRES_DB: dockerkubes
    defaults:
      run:
        working-directory: .

    services:
      postgres_db:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: pulling get repo
        uses: actions/checkout@v2
      - name: install python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: run test
        run: python manage.py test


  docker_build:
    runs-on: ubuntu-latest
    needs: [test_django]
    environment:
      name: testing
    env:
      DJANGO_SECRET_KEY: ${{secrets.DJANGO_SECRET_KEY}}
      CLUSTER_NAME: django-k8s
    
    steps:
      - name: pulling get repo
        uses: actions/checkout@v2
      - name: install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: login to DO container registry with short-lived creds
        run: doctl registry login --expiry-seconds 1200
      - name: build container image
        working-directory: .
        run: |
          docker build -f Dockerfile \
            -t registry.digitalocean.com/kt-k8s/django-k8s-web:latest \
            -t registry.digitalocean.com/kt-k8s/django-k8s-web:${GITHUB_SHA::7} \
            .      
      - name: push image
        run: |
          docker push registry.digitalocean.com/kt-k8s/django-k8s-web --all-tags
      - name: k8s cluster kubeconfig file with short-lved creds
        run: |
          doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ env.CLUSTER_NAME }}    
      - name: update deployment secrets
        run: |
          cat << EOF >> ./.env.prod
          DEBUG=True
          DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }}
          DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
          DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }}
          DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
          DATABASE_ENGINE=${{ secrets.DATABASE_ENGINE }}
          ALLOWED_HOST=${{ secrets.ALLOWED_HOST }}
          DB_IGNORE_SSL=${{ secrets.DB_IGNORE_SSL }}
          POSTGRES_READY=0
          POSTGRES_DB=${{ secrets.PROD_POSTGRES_DB }}
          POSTGRES_PASSWORD=${{ secrets.PROD_POSTGRES_PASSWORD }}
          POSTGRES_USER=${{ secrets.PROD_POSTGRES_USER }}
          POSTGRES_HOST=${{ secrets.PROD_POSTGRES_HOST }}
          POSTGRES_PORT=${{ secrets.PROD_POSTGRES_PORT }}
          EOF
          kubectl delete secret django-k8s-prod-env
          kubectl create secret generic django-k8s-prod-env --from-env-file=./.env.prod
      - name: update deployment image
        run: |
          kubectl set image deployment/django-k8s-deployment  django-k8s-web=registry.digitalocean.com/kt-k8s/django-k8s-web:${GITHUB_SHA::7}
      - name: wait for rollout to finish
        run: |
          kubectl rollout status deployment/django-k8s-deployment
      - name: post build (migrate)
        run: |
          export SINGLE_POD_NAME=$(kubectl get pod -l app=django-k8s-deployment -o jsonpath={.items[0].metadata.name})
          kubectl exec -it $SINGLE_POD_NAME -- bash /app/migrate.sh
